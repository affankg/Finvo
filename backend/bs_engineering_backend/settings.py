"""
Django settings for bs_engineering_backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
import dj_database_url
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-#yxitycs-micb1si^edzw)24otwz90ev@bk2fdnesn#$-m$58%')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default='False', cast=bool)

ALLOWED_HOSTS = ['*', '192.168.100.113', '127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'api',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middleware.AuditLogMiddleware',
]

ROOT_URLCONF = 'bs_engineering_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bs_engineering_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASE_URL = config('DATABASE_URL', default=None)

if DATABASE_URL:
    # Production database configuration
    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL)
    }
else:
    # Development database configuration
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'api.User'

# REST Framework configuration
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# JWT configuration
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}

# CORS configuration
# By default we keep a permissive local-dev set. For deployments you can either
# set specific origins via CORS_ALLOWED_ORIGINS (default below) or enable
# wildcard origin support by setting environment variable
# CORS_ALLOW_ALL_ORIGINS=True. Note: when allowing all origins, cookies/credentials
# cannot be used (browsers refuse Access-Control-Allow-Credentials with wildcard).
DEFAULT_CORS_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:3001",
    "http://127.0.0.1:3001",
    "http://localhost:3002",
    "http://127.0.0.1:3002",
    "http://localhost:3003",
    "http://127.0.0.1:3003",
    "http://localhost:3004",
    "http://127.0.0.1:3004",
    "http://localhost:3005",
    "http://127.0.0.1:3005",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://192.168.100.113:3003",
    "http://192.168.100.113:3004",
    "http://192.168.100.113:3000",
    "http://192.168.100.113:5173",
    # Add your current network IP for Vite frontend
    "http://192.168.0.158:5173",
    "http://192.168.0.158:3000",
]

# Read an env var that, when true, will allow ALL origins (useful for quick
# testing or when your frontend is served from many dynamic origins). This is
# not recommended for long-term production unless you understand the security
# implications.
USE_CORS_ALLOW_ALL = config('CORS_ALLOW_ALL_ORIGINS', default=False, cast=bool)

if USE_CORS_ALLOW_ALL:
    CORS_ALLOW_ALL_ORIGINS = True
    # When allowing all origins, browsers won't accept credentials together with
    # a wildcard origin. Disable credentials to avoid incorrect responses.
    CORS_ALLOW_CREDENTIALS = False
    CORS_ALLOWED_ORIGINS = []
else:
    # Start with the default local/dev origins
    CORS_ALLOWED_ORIGINS = DEFAULT_CORS_ORIGINS.copy()
    # Add production frontend URL when deploying (if DEBUG is False)
    if not DEBUG:
        CORS_ALLOWED_ORIGINS.extend([
            "https://finvo-one.vercel.app",  # Production Vercel frontend
        ])
    # Allow credentials by default (so cookie-based auth would work in dev)
    CORS_ALLOW_CREDENTIALS = True

# Allow overriding CORS origins from an environment variable (comma-separated list)
# Example: CORS_ALLOWED_ORIGINS_ENV="https://finvo-gt54.vercel.app,https://other.app"
raw_cors_env = config('CORS_ALLOWED_ORIGINS_ENV', default='')
if raw_cors_env:
    cors_list = [o.strip() for o in raw_cors_env.split(',') if o.strip()]
    if cors_list:
        CORS_ALLOWED_ORIGINS = cors_list

# If the app is running behind a proxy (like Fly, Render, etc.), trust the X-Forwarded-Proto header
# so Django knows requests are secure and CSRF checks with secure origins work correctly.
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# CSRF trusted origins: allow configuring via environment variable (comma-separated list of origins)
# Example: CSRF_TRUSTED_ORIGINS=https://finvo-app.fly.dev,https://www.example.com
raw_csrf_origins = config('CSRF_TRUSTED_ORIGINS', default='https://finvo-one.vercel.app')
CSRF_TRUSTED_ORIGINS = [o.strip() for o in raw_csrf_origins.split(',') if o.strip()]

# As a fallback when DEBUG is False and no CSRF_TRUSTED_ORIGINS provided, derive from ALLOWED_HOSTS
if not CSRF_TRUSTED_ORIGINS and not DEBUG:
    CSRF_TRUSTED_ORIGINS = [f'https://{h}' for h in ALLOWED_HOSTS if h and h != '*']

# Make cookies secure in production
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='noreply@bsengineering.com')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Static files for production
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Company information
COMPANY_INFO = {
    'name': 'Business Solution Engineering',
    'full_name': 'Business Solution Engineering',
    'address': 'Suite no 407, 4th Floor, Silver Trade Tower, B46, Block 13-A, Gulshan-e-Iqbal, Karachi, Pakistan: 75300',
    'phone': 'P: 92.21.34982786 | C: +92.3063216344 | C: +92.3443311303',
    'email': 'bs@bsconsults.com',
    'website': 'www.bsconsults.com',
    'tax_id': 'TAX123456789',
}

# Currency Configuration
CURRENCY_CHOICES = [
    ('USD', 'US Dollar', '$'),
    ('PKR', 'Pakistani Rupee', 'Rs'),
    ('CNY', 'Chinese Yuan', '¥'),
    ('EUR', 'Euro', '€'),
    ('GBP', 'British Pound', '£'),
]

# Default currency
DEFAULT_CURRENCY = 'PKR'

# PDF Settings
PDF_STORAGE_PATH = MEDIA_ROOT / 'pdfs'
